import openai
import telebot
import sqlite3
import requests

# set API key for OpenAI
openai.api_key = ""
# create bot object
bot = telebot.TeleBot(token='')
# set up database connection
conn = sqlite3.connect('GDB.db', check_same_thread=False)
c = conn.cursor()
# initialize state variable
is_feedback = False
# handle '/start' command
@bot.message_handler(commands=['start'])
def start_command(message: telebot.types.Message):
    # send start message
    bot.send_message(chat_id=message.chat.id, text="üëã –Ø GigaAsessor –Ω–∞ –æ—Å–Ω–æ–≤–µ GPT-3.5 –∏ —è –ø–æ–º–æ–≥–∞—é —É–ª—É—á—à–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å, –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, —è –µ–≥–æ –æ—Ü–µ–Ω—é –∏ –¥–∞–º —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é.")
# handle user messages
@bot.message_handler(func=lambda message: True)
def process_message(message: telebot.types.Message):
    global is_feedback
    if is_feedback:
        # handle feedback
        user_id = message.from_user.id
        feedback = int(message.text)
        c.execute("UPDATE GDB SET mark=? WHERE id=?", (feedback, user_id))
        conn.commit()
        bot.send_message(chat_id=message.chat.id, text="Thanks for your feedback!")
        is_feedback = False
    else:
        # handle query
        keyword = '//'
        prompt_prefix = "–ü–æ–Ω—è—Ç–µ–Ω –ª–∏ —Ç–µ–±–µ –º–æ–π –ø—Ä–æ–º–ø—Ç(–Ω–µ —Ç–≤–æ–π, –∞ –º–æ–π)? –î–∞–π –µ–º—É –æ—Ü–µ–Ω–∫—É(–º–æ–µ–º—É –ø—Ä–æ–º–ø—Ç—É). –ß—Ç–æ –º–Ω–µ –Ω–∞–¥–æ –≤ –Ω—ë–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å(—É–∫–∞–∂–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ —Ç–µ–±–µ), —á—Ç–æ–±—ã —Ç–µ–±–µ –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —è —Ö–æ—á—É(–Ω–µ —Ç—ã —Ö–æ—á–µ—à—å, –∞ —è), –º–æ–∂–µ—Ç –Ω–∞–¥–æ —á—Ç–æ-—Ç–æ —É—Ç–æ—á–Ω–∏—Ç—å(–¥–ª—è —Ç–µ–º—ã –ø—Ä–æ–º–ø—Ç–∞)? –î–∞–π –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç –ø–æ –ø—É–Ω–∫—Ç–∞–º.\n//"
        input_text = message.text
        full_prompt = prompt_prefix + input_text
        # send prompt to OpenAI API
        response = openai.Completion.create(
            engine='text-davinci-003',
            prompt=full_prompt,
            max_tokens=1024,
            temperature=0.5
        )
        output_text = response.choices[0].text
        markup = telebot.types.ReplyKeyboardMarkup(row_width=3)
        markup.add(telebot.types.KeyboardButton('0'), telebot.types.KeyboardButton('1'), telebot.types.KeyboardButton('2'))
        bot.send_message(chat_id=message.chat.id, text=output_text, reply_markup=markup)
        user_id = message.from_user.id
        c.execute("INSERT INTO GDB (id, mark, text) VALUES (?, ?, ?)", (user_id, None, input_text))
        conn.commit()
        is_feedback = True

# handle user feedback
@bot.message_handler(func=lambda message: message.text in ['0', '1', '2'])
def process_feedback(message: telebot.types.Message):
    pass  # handled in the process_message function

bot.polling(none_stop=True)

